Question 1:
The clipping filter is a very rudimentary method for removing extraneous values because it only accepts values from the sensor that are within a certain range, and all values outside this range are ignored. A more accurate method of removing small errors is to consider them with respect to the rest of the values returned by the sensor. A single extraneous value should be ignored, but multiple extraneous values mean that a wall the robot was sensing could have suddenly ended. To accomplish this, the robot should process multiple sensor values at a time. If one of them is greater than the rest by a threshold then it should be omitted. This could be done by taking the average of the values and comparing each value to this average, if it differs by a more than the threshold, the value can be thrown out. The average of the remaining values is then returned as the sensor value to be used by the rest of the code in the robot.
Question 2:
The ultrasonic sensor receives much of its error from interference and from its own sound waves bouncing off multiple objects or objects to the side of the sensor and then returning to it. A very simple fix that addresses all of these problems is to narrow the scope of the sensor so it only sends sound waves straight out in front of it instead of in all directions. This can be accomplished by wrapping some type of material around the sensor that focuses the waves out the front of the sensor. Cardboard or paper could be used for this.
Question 3:
Another possible form of ultrasonic localization is to use the method described in question three in the observations and conclusions section by comparing minimum values. To do this the ultrasonic sensor would need to not report extraneous minimums. There could be filtered out using the method described above in question 2 of this section. It would also work anywhere in the field, not just when the robot is placed in the corner tile. For more detail see the answer to question 2 in observations, it is very detailed!
